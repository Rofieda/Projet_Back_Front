# Generated by Django 5.0.2 on 2024-03-29 21:30

import django.db.models.deletion
from django.db import migrations, models


class Migration(migrations.Migration):

    initial = True

    dependencies = [
    ]

    operations = [
        migrations.CreateModel(
            name='Chercheur',
            fields=[
                ('id_chercheur', models.AutoField(primary_key=True, serialize=False)),
                ('nom_chercheur', models.CharField(max_length=50)),
                ('prenom_chercheur', models.CharField(max_length=50)),
                ('etablissement', models.CharField(max_length=50)),
                ('diplome', models.CharField(choices=[('Licence', 'Licence'), ('Master', 'Master'), ('Ingéniorat', 'Ingéniorat'), ('Doctorat', 'Doctorat'), ('Diplôme dÉtudes Supérieures', 'Diplôme dÉtudes Supérieures'), ('Diplôme de Formation Approfondie', 'Diplôme de Formation Approfondie'), ('Diplôme dÉtudes Approfondies', 'Diplôme dÉtudes Approfondies'), ('Autre', 'Autre')], max_length=100)),
                ('email', models.EmailField(max_length=254, unique=True)),
                ('tel', models.CharField(max_length=50)),
                ('dblp_lien', models.CharField(max_length=50)),
                ('research_gate_lien', models.CharField(max_length=50)),
                ('google_scholar_lien', models.CharField(max_length=50)),
                ('site_web', models.CharField(max_length=50)),
                ('grade_ensignement', models.CharField(choices=[('Professeur', 'Professeur'), ('MCA', 'MCA'), ('MCB', 'MCB'), ('MAA', 'MAA'), ('MAB', 'MAB'), ('Doctorant', 'Doctorant'), ('NULL', 'NULL')], max_length=50)),
                ('grade_recherche', models.CharField(choices=[('Directeur de recherche', 'Directeur de recherche'), ('Maître de recherche', 'Maître de recherche'), ('NULL', 'NULL')], max_length=50)),
                ('Qualite', models.CharField(choices=[('Enseignant-Chercheur', 'Enseignant-Chercheur'), ('Chercheur', 'Chercheur'), ('Doctorant', 'Doctorant'), ('Autre', 'Autre')], max_length=50)),
                ('h_index', models.CharField(max_length=50)),
                ('sexe', models.CharField(choices=[('Homme', 'Homme'), ('Femme', 'Femme')], max_length=50, null=True)),
                ('equipe', models.CharField(max_length=50)),
                ('statut', models.CharField(max_length=50)),
            ],
        ),
        migrations.CreateModel(
            name='Conf_journal',
            fields=[
                ('Conf_Journal_id', models.AutoField(primary_key=True, serialize=False)),
                ('acronyme', models.CharField(max_length=50)),
                ('nom', models.CharField(max_length=50)),
                ('p_type', models.CharField(choices=[('Conférence', 'Conférence'), ('Journal', 'Journal')], max_length=50)),
                ('periodicite', models.CharField(choices=[('Ad hoc', 'Ad hoc'), ('Continuelle', 'Continuelle'), ('Saisonnière', 'Saisonnière'), ('Mensuelle', 'Mensuelle'), ('Bimensuelle', 'Bimensuelle'), ('Trimestrielle', 'Trimestrielle'), ('Semestrielle', 'Semestrielle'), ('Annuelle', 'Annuelle'), ('Biennale', 'Biennale'), ('Triennale', 'Triennale'), ('Quadriennale', 'Quadriennale'), ('Quinquemestrielle', 'Quinquemestrielle'), ('Hebdomadaire', 'Hebdomadaire'), ('Biquadrimestrielle', 'Biquadrimestrielle'), ('Spéciale/Supplémentaire', 'Spéciale/Supplémentaire'), ('autre', 'autre')], max_length=50)),
                ('lien', models.CharField(max_length=50)),
                ('core_classification', models.CharField(choices=[('A*', 'A*'), ('A', 'A'), ('B', 'B'), ('C', 'C')], max_length=50)),
                ('scimago_classification', models.CharField(choices=[('Q1', 'Q1'), ('Q2', 'Q2'), ('Q3', 'Q3'), ('Q4', 'Q4')], max_length=50)),
                ('qualis_classification', models.CharField(choices=[('A1', 'A1'), ('A2', 'A2'), ('B1', 'B1'), ('B2', 'B2'), ('B3', 'B3'), ('B4', 'B4'), ('B5', 'B5'), ('C', 'C')], max_length=50)),
                ('dgrsdt_classification', models.CharField(choices=[('A', 'A'), ('B', 'B'), ('Autre', 'Autre')], max_length=50)),
            ],
        ),
        migrations.CreateModel(
            name='Encadrement',
            fields=[
                ('id_encadrement', models.AutoField(primary_key=True, serialize=False)),
                ('type_encadrement', models.CharField(choices=[('PFE', 'PFE'), ('Master', 'Master'), ('Doctorat', 'Doctorat'), ('Autre', 'Autre')], max_length=50)),
                ('intitule', models.CharField(default=None, max_length=50)),
                ('role_chercheur', models.CharField(choices=[('encadreur', 'Encadreur'), ('co_encadreur', 'Co_encadreur')], default='', max_length=50)),
                ('annee_debut', models.IntegerField(db_column='année_debut')),
                ('annee_fin', models.IntegerField(db_column='année_fin')),
                ('nom_prenom_etd1', models.CharField(max_length=50)),
                ('nom_prenom_etd2', models.CharField(max_length=50)),
            ],
        ),
        migrations.CreateModel(
            name='Projet',
            fields=[
                ('id_projet', models.AutoField(primary_key=True, serialize=False)),
                ('titre_projet', models.CharField(max_length=50)),
                ('chef_de_projet', models.CharField(max_length=50)),
                ('domaine', models.CharField(max_length=50)),
                ('annee_debut', models.IntegerField(db_column='année_debut')),
                ('annee_fin', models.IntegerField(db_column='année_fin')),
            ],
        ),
        migrations.CreateModel(
            name='ChecheursProjets',
            fields=[
                ('id', models.BigAutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('id_chercheur', models.ForeignKey(on_delete=django.db.models.deletion.CASCADE, to='lmcs.chercheur')),
                ('id_projet', models.ForeignKey(on_delete=django.db.models.deletion.CASCADE, to='lmcs.projet')),
            ],
            options={
                'unique_together': {('id_chercheur', 'id_projet')},
            },
        ),
        migrations.CreateModel(
            name='ChecheursEncadrements',
            fields=[
                ('id', models.BigAutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('chercheur', models.ForeignKey(on_delete=django.db.models.deletion.CASCADE, to='lmcs.chercheur')),
                ('encadrement', models.ForeignKey(on_delete=django.db.models.deletion.CASCADE, to='lmcs.encadrement')),
            ],
            options={
                'unique_together': {('chercheur', 'encadrement')},
            },
        ),
        migrations.AddField(
            model_name='chercheur',
            name='encadrements',
            field=models.ManyToManyField(through='lmcs.ChecheursEncadrements', to='lmcs.encadrement'),
        ),
        migrations.AddField(
            model_name='chercheur',
            name='projet',
            field=models.ManyToManyField(through='lmcs.ChecheursProjets', to='lmcs.projet'),
        ),
        migrations.CreateModel(
            name='Publication',
            fields=[
                ('id', models.BigAutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('annee', models.IntegerField(db_column='année')),
                ('titre_publication', models.CharField(max_length=50)),
                ('volume', models.CharField(max_length=50)),
                ('citations', models.IntegerField()),
                ('lien_publie', models.CharField(max_length=50)),
                ('nombre_page', models.CharField(max_length=50)),
                ('rang_chercheur', models.IntegerField()),
                ('Conf_Journal_id', models.ForeignKey(db_column='Conf_Journal_id', on_delete=django.db.models.deletion.CASCADE, to='lmcs.conf_journal')),
                ('id_chercheur', models.ForeignKey(db_column='id_chercheur', on_delete=django.db.models.deletion.CASCADE, to='lmcs.chercheur')),
            ],
            options={
                'unique_together': {('id_chercheur', 'Conf_Journal_id')},
            },
        ),
        migrations.AddField(
            model_name='chercheur',
            name='conf_journals',
            field=models.ManyToManyField(through='lmcs.Publication', to='lmcs.conf_journal'),
        ),
    ]
